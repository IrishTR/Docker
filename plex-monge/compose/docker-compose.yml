########################### NETWORKS
networks:
  socket_proxy:
    name: socket_proxy
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.91.0/24
  t3_proxy:
    name: t3_proxy
    driver: bridge
    ipam:
      config:
        - subnet: $TRAEFIK_NETWORK
  default:
    driver: bridge

# Common environment values
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

# Keys common to some of the services in basic-services.txt
x-common-keys-core: &common-keys-core
  networks:
    - t3_proxy
  security_opt:
    - no-new-privileges:true
  restart: always

# Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  networks:
    - t3_proxy
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

secrets:
  htpasswd:
    file: $DOCKERDIR/secrets/htpasswd
  cf_email:
    file: $DOCKERDIR/secrets/cf_email
  cf_api_key:
    file: $DOCKERDIR/secrets/cf_api_key
  traefik_forward_auth:
    file: $DOCKERDIR/secrets/traefik_forward_auth
  mysql_root_password:
    file: $DOCKERDIR/secrets/mysql_root_password
  guac_db_name:
    file: $DOCKERDIR/secrets/guac_db_name
  guac_mysql_user:
    file: $DOCKERDIR/secrets/guac_mysql_user
  guac_mysql_password:
    file: $DOCKERDIR/secrets/guac_mysql_password
  transmission_rpc_username:
    file: $DOCKERDIR/secrets/transmission_rpc_username
  transmission_rpc_password:
    file: $DOCKERDIR/secrets/transmission_rpc_password
  pia_username:
    file: $DOCKERDIR/secrets/pia_username
  pia_password:
    file: $DOCKERDIR/secrets/pia_password
  plex_claim:
    file: $DOCKERDIR/secrets/plex_claim
  plex_token:
    file: $DOCKERDIR/secrets/plex_token
  github_token:
    file: $DOCKERDIR/secrets/github_token
  trakt_clientid:
    file: $DOCKERDIR/secrets/trakt_clientid
  trakt_clientsecret:
    file: $DOCKERDIR/secrets/trakt_clientsecret
  trakt_pin:
    file: $DOCKERDIR/secrets/trakt_pin
  glances_password:
    file: $DOCKERDIR/secrets/glances_password
  glances_pass:
    file: $DOCKERDIR/secrets/glances_pass
  portainer_key:
    file: $DOCKERDIR/secrets/portainer_key
  radarr_api:
    file: $DOCKERDIR/secrets/radarr_api_key
  sonarr_api:
    file: $DOCKERDIR/secrets/sonarr_api_key
  lidarr_api:
    file: $DOCKERDIR/secrets/lidarr_api_key
  bazarr_api:
    file: $DOCKERDIR/secrets/bazarr_api_key
  mylar_api:
    file: $DOCKERDIR/secrets/mylar_api_key
  readarr_api:
    file: $DOCKERDIR/secrets/readarr_api_key
  prowlarr_api:
    file: $DOCKERDIR/secrets/prowlarr_api_key
  tautulli_api:
    file: $DOCKERDIR/secrets/tautulli_api_key
  sabnzbd_api:
    file: $DOCKERDIR/secrets/sabnzbd_api_key
  ombi_api:
    file: $DOCKERDIR/secrets/ombi_api_key
  omdb_api:
    file: $DOCKERDIR/secrets/omdb_api_key
  tmdb_api:
    file: $DOCKERDIR/secrets/tmdb_api_key
  mdblist_api:
    file: $DOCKERDIR/secrets/mdblist_api_key
  hpusername:
    file: $DOCKERDIR/secrets/hpusername
  hppassword:
    file: $DOCKERDIR/secrets/hppassword

########################### SERVICES
services:
############################# FRONTENDS

# Traefik 3 - Reverse Proxy
  traefik:
    <<: *common-keys-core
    image: traefik:3.3
    container_name: traefik
    profiles: ["infra", "all"]
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=false
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --entryPoints.traefik.address=:8080
      # - --entryPoints.ping.address=:8081
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --api=true
      - --api.dashboard=true
      # - --api.insecure=true
      # - --ping=true
      # - --serversTransport.insecureSkipVerify=true
      - --entrypoints.https.forwardedHeaders.trustedIPs=$CLOUDFLARE_IPS,$IPWHITELIST
      - --log=true
      - --log.filePath=/logs/traefik.log
      - --log.level=INFO # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/logs/access.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=204-299,400-499,500-599
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock # Disable for Socket Proxy. Enable otherwise.
      #- --providers.docker.endpoint=tcp://socket-proxy:2375 # Enable for Socket Proxy. Disable otherwise.
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=t3_proxy 
      # - --providers.docker.swarmMode=false # Traefik v2 Swarm
      # - --providers.swarm.endpoint=tcp://127.0.0.1:2377 # Traefik v3 Swarm
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.options=tls-opts@file
      # Add dns-cloudflare as default certresolver for all services. Also enables TLS and no need to specify on individual services
      - --entrypoints.websecure.http.tls.certresolver=dns-cloudflare
      - --entrypoints.websecure.http.tls.domains[0].main=$DOMAINNAME
      - --entrypoints.websecure.http.tls.domains[0].sans=*.$DOMAINNAME
      #- --entrypoints.websecure.http.tls.domains[1].main=$DOMAINNAME_1
      #- --entrypoints.websecure.http.tls.domains[1].sans=*.$DOMAINNAME_1
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory
      - --providers.file.watch=true # Only works on top level files in the rules folder
      # - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.propagation.delayBeforeChecks=90
    networks:
      t3_proxy:
        ipv4_address: $TRAEFIK_IP
      socket_proxy:
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - $DOCKERDIR/traefik3/rules:/rules
      - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy instead for improved security
      - $DOCKERDIR/traefik3/acme/acme.json:/acme.json # cert location - you must touch this file and change permissions to 600
      - $DOCKERDIR/traefik3/logs:/logs # for fail2ban - make sure to touch file before starting container
    environment:
      <<: *default-tz-puid-pgid
      DOMAINNAME: $DOMAINNAME
      CF_API_EMAIL_FILE: /run/secrets/cf_email
      CF_API_KEY_FILE: /run/secrets/cf_api_key
      HTPASSWD_FILE: /run/secrets/htpasswd
    secrets:
      - cf_email
      - cf_api_key
      - htpasswd
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=websecure"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAINNAME`)"
      ## Services - API
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      ## Middlewares
      - "traefik.http.routers.traefik-rtr.middlewares=chain-oauth@file"

# Google OAuth - Single Sign On using OAuth 2.0
  # https://hub.docker.com/r/thomseddon/traefik-forward-auth
  # https://www.smarthomebeginner.com/google-oauth-with-traefik-docker/
  oauth:
    <<: *common-keys-core
    image: reddthebamf/traefik-forward-auth:1.23.2-alpine-amd64 #thomseddon/traefik-forward-auth
    container_name: oauth
    profiles: ["infra", "all"]
    volumes:
      - $DOCKERDIR/oauth/rules:/rules
    environment:
      - CONFIG=/config
      - COOKIE_DOMAIN=$DOMAINNAME
      - INSECURE_COOKIE=false
      - AUTH_HOST=oauth.$DOMAINNAME
      - URL_PATH=/_oauth
      - LOG_LEVEL=warn # set to trace while testing bypass rules
      - LOG_FORMAT=text
      - LIFETIME=86400 # 1 day
      - DEFAULT_ACTION=auth
      - DEFAULT_PROVIDER=google
    secrets:
      - source: traefik_forward_auth
        target: /config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oauth-rtr.entrypoints=websecure"
      - "traefik.http.routers.oauth-rtr.rule=Host(`oauth.$DOMAINNAME`)"
      - "traefik.http.routers.oauth-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.oauth-rtr.service=oauth-svc"
      - "traefik.http.services.oauth-svc.loadbalancer.server.port=4181"

# Docker Socket Proxy
  socket-proxy:
    container_name: socket-proxy
    image: tecnativa/docker-socket-proxy
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["infra", "all"]
    networks:
      socket_proxy:
        ipv4_address: 192.168.91.254 # You can specify a static IP
    # privileged: true # true for VM. False for unprivileged LXC container.
    ports:
    #  - "$ZEROTIER_IP_CLOUDSERVER:2375:2375" # Port 2375 should only ever get exposed to the internal network. When possible use this line.
    # I use the next line instead, as I want portainer to manage multiple docker endpoints within my home network.
      - "2375:2375" # Do not expose this to the internet with port forwarding
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1 # Watchtower
      # Not always needed
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, portainer, etc.
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1 # Portainer
      - VOLUMES=1 # Portainer

# Portainer - WebUI for Containers
  portainer:
    <<: *common-keys-core
    image: portainer/portainer-ce
    container_name: portainer
    profiles: ["infra", "all"]
    command: -H unix:///var/run/docker.sock
    ports:
      - "$PORTAINER_PORT:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/portainer/data:/data
    environment:
      <<: *default-tz-puid-pgid
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer-rtr.entrypoints=websecure"
      - "traefik.http.routers.portainer-rtr.rule=Host(`portainer.$DOMAINNAME`)"
      - "traefik.http.routers.portainer-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.portainer-rtr.service=portainer-svc"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"

# Homepage - Application Dashboard
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["infra", "all"]
    networks:
      - t3_proxy
    ports:
     - "$HOMEPAGE_PORT:3000" 
    volumes:
      - $DOCKERDIR/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro # pass local proxy
      - $USERDIR/media:/media
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: 987
      HOMEPAGE_ALLOWED_HOSTS: www.$DOMAINNAME
      HOMEPAGE_VAR_DOMAINNAME: $DOMAINNAME
      HOMEPAGE_VAR_SERVER_IP: $SERVER_IP
      HOMEPAGE_VAR_ROUTER_IP: $ROUTER_IP
      HOMEPAGE_VAR_PLEX_PORT: $PLEX_PORT
      HOMEPAGE_VAR_HOMEPAGE_LABEL: $HOMEPAGE_LABEL
      HOMEPAGE_VAR_HOMEPAGE_LAT: $HOMEPAGE_LAT
      HOMEPAGE_VAR_HOMEPAGE_LONG: $HOMEPAGE_LONG
      HOMEPAGE_VAR_HOMEPAGE_TZ: $TZ
      HOMEPAGE_FILE_HPUSERNAME: /run/secrets/hpusername
      HOMEPAGE_FILE_HPPASSWORD: /run/secrets/hppassword
      HOMEPAGE_FILE_GLANCES_PASS: /run/secrets/glances_pass
      HOMEPAGE_FILE_PLEX_TOKEN: /run/secrets/plex_token
      HOMEPAGE_FILE_PORTAINER_KEY: /run/secrets/portainer_key
      HOMEPAGE_FILE_TRANSMISSION_RPC_PASSWORD: /run/secrets/transmission_rpc_password
      HOMEPAGE_FILE_TRANSMISSION_RPC_USERNAME: /run/secrets/transmission_rpc_username
      HOMEPAGE_FILE_RADARR_API: /run/secrets/radarr_api
      HOMEPAGE_FILE_SONARR_API: /run/secrets/sonarr_api
      HOMEPAGE_FILE_LIDARR_API: /run/secrets/lidarr_api
      HOMEPAGE_FILE_PROWLARR_API: /run/secrets/prowlarr_api
      HOMEPAGE_FILE_TAUTULLI_API: /run/secrets/tautulli_api
      HOMEPAGE_FILE_SABNZBD_API: /run/secrets/sabnzbd_api
      HOMEPAGE_FILE_BAZARR_API: /run/secrets/bazarr_api
      HOMEPAGE_FILE_READARR_API: /run/secrets/readarr_api
      HOMEPAGE_FILE_MYLAR_API: /run/secrets/mylar_api
    secrets:
      - hpusername
      - hppassword
      - portainer_key
      - glances_pass
      - plex_token
      - transmission_rpc_password
      - transmission_rpc_username
      - sabnzbd_api
      - radarr_api
      - sonarr_api
      - lidarr_api
      - prowlarr_api
      - tautulli_api
      - bazarr_api
      - ombi_api
      - readarr_api
      - mylar_api
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.homepage-rtr.entrypoints=websecure"
      - "traefik.http.routers.homepage-rtr.rule=Host(`www.$DOMAINNAME`)"
      # Middlewares
      - "traefik.http.routers.homepage-rtr.middlewares=chain-oauth@file"
      # HTTP Services
      - "traefik.http.routers.homepage-rtr.service=homepage-svc"
      - "traefik.http.services.homepage-svc.loadbalancer.server.port=3000"

############################# DATABASE

# MariaDB - MySQL Database
  mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    hostname: mariadb
    networks:
      - default
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["infra", "all"]
    ports:
      - "$MARIADB_PORT:3306"
    volumes:
      - $DOCKERDIR/mariadb/data:/config
    environment:
      <<: *default-tz-puid-pgid
      FILE__MYSQL_ROOT_PASSWORD: /run/secrets/mysql_root_password
    secrets:
      - mysql_root_password

# phpMyAdmin - Database management
  phpmyadmin:
    <<: *common-keys-apps
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    profiles: ["infra", "all"]
    networks:
       - default
       - t3_proxy
    ports:
      - "$PHPMYADMIN_PORT:80"
    environment:
      <<: *default-tz-puid-pgid
      PMA_HOST: $MARIADB_HOST
      PMA_PORT: $MARIADB_PORT
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
    secrets:
      - mysql_root_password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin-rtr.entrypoints=websecure"
      - "traefik.http.routers.phpmyadmin-rtr.rule=Host(`pma.$DOMAINNAME`)"
      - "traefik.http.routers.phpmyadmin-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.phpmyadmin-rtr.service=phpmyadmin-svc"
      - "traefik.http.services.phpmyadmin-svc.loadbalancer.server.port=80"

# Guacamole - Remote desktop, SSH, on Telnet on any HTML5 Browser 
# Create all databases and tables first
  guacamole:
    image: guacamole/guacamole
    container_name: guacamole
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["infra", "remote"]
    networks:
      - t3_proxy
      - default
    volumes:
      - $DOCKERDIR/guacamole/temp:/temp
#    ports:
#      - "$GUACAMOLE_PORT:8080"
    environment:
      <<: *default-tz-puid-pgid
      REMOTE_IP_VALUE_ENABLED: true
      GUACD_HOSTNAME: guacd
      MYSQL_HOSTNAME: $MARIADB_HOST
      MYSQL_PORT: $MARIADB_PORT
      MYSQL_DATABASE_FILE: /run/secrets/guac_db_name
      MYSQL_USER_FILE: /run/secrets/guac_mysql_user
      MYSQL_PASSWORD_FILE: /run/secrets/guac_mysql_password
    secrets:
      - guac_db_name
      - guac_mysql_user
      - guac_mysql_password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.guacamole-rtr.entrypoints=websecure"
      - "traefik.http.routers.guacamole-rtr.rule=Host(`guac.$DOMAINNAME`)"
      - "traefik.http.routers.guacamole-rtr.middlewares=chain-oauth@file,add-guacamole"
      - "traefik.http.middlewares.add-guacamole.addPrefix.prefix=/guacamole"
      - "traefik.http.routers.guacamole-rtr.service=guacamole-svc"
      - "traefik.http.services.guacamole-svc.loadbalancer.server.port=8080"

# Guacamole Daemon - Needed for Guacamole
  guacd:
#    <<: *common-keys-core
    image: guacamole/guacd
    container_name: guacd
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["infra", "remote"]

# Cloudflare DDNS - Dynamic DNS Updater
  cloudddns:
    <<: *common-keys-core
    image: reddthebamf/cloudflare-ddns:22-alpine3.19 #joshava/cloudflare-ddns
    container_name: cloudddns
    profiles: ["infra", "all"]
    volumes:
      - $DOCKERDIR/cloudflare-ddns/config.yaml:/app/config.yaml
    environment:
      <<: *default-tz-puid-pgid
      DOMAINNAME: $DOMAINNAME 

############################# DOWNLOADERS
# TransmissionBT - Torrent Downloader
  transmission:
    <<: *common-keys-apps
#    image: linuxserver/transmission:latest
    image: haugene/transmission-openvpn
    container_name: transmission
    profiles: ["media", "downloads", "all"]
    networks:
      t3_proxy:
        ipv4_address: $TRANSMISSION_IP
    ports:
      - "$TRANSMISSION_PORT:9091"
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DOCKERDIR/transmission/data:/data
      - $DOCKERDIR/transmission/config:/config
      - $DOWNLOAD_DIR:/downloads
    environment:
      <<: *default-tz-puid-pgid
      OPENVPN_PROVIDER: PIA
      OPENVPN_USERNAME__FILE: /run/secrets/pia_username
      OPENVPN_PASSWORD__FILE: /run/secrets/pia_password
      OPENVPN_CONFIG: "argentina"
      OPENVPN_OPTS: --inactive 3600 --ping 10 --ping-exit 60
      LOCAL_NETWORK: $LOCAL_NETWORK
      UMASK_SET: 002
      TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "false"
      TRANSMISSION_RPC_HOST_WHITELIST: transmission,transmission.$DOMAINNAME
      TRANSMISSION_RPC_WHITELIST: $IPWHITELIST
      TRANSMISSION_UMASK: 002
      TRANSMISSION_RATIO_LIMIT: 0
      TRANSMISSION_RATIO_LIMIT_ENABLED: "true"
      TRANSMISSION_IDLE_SEEDING_LIMIT: 5
      TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED: "true"
#      TRANSMISSION_ALT_SPEED_DOWN: 2000
#      TRANSMISSION_ALT_SPEED_ENABLED: "true"
#      TRANSMISSION_ALT_SPEED_UP: 15
#      TRANSMISSION_SPEED_LIMIT_DOWN: 6000
#      TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED: "true"
      TRANSMISSION_SPEED_LIMIT_UP: 200
      TRANSMISSION_SPEED_LIMIT_UP_ENABLED: "true"
      # TRANSMISSION_BLOCKLIST_URL: "http://john.bitsurge.net/public/biglist.p2p.gz"
      TRANSMISSION_PEER_LIMIT_GLOBAL: 1000
      TRANSMISSION_PEER_LIMIT_PER_TORRENT: 100
      TRANSMISSION_DOWNLOAD_QUEUE_SIZE: 10
      TRANSMISSION_DOWNLOAD_QUEUE_ENABLED: "true"
      TRANSMISSION_QUEUE_STALLED_MINUTES: 30
      TRANSMISSION_QUEUE_STALLED_ENABLED: "true"
      TRANSMISSION_INCOMPLETE_DIR: "/downloads/incomplete/transmission"
      TRANSMISSION_INCOMPLETE_DIR_ENABLED: "true"
      TRANSMISSION_WATCH_DIR: "/downloads"
      TRANSMISSION_WATCH_DIR_ENABLED: "true"
      TRANSMISSION_DOWNLOAD_DIR: "/downloads/completed/transmission"
      TRANSMISSION_RPC_USERNAME_FILE: "/run/secrets/transmission_rpc_username"
      TRANSMISSION_RPC_PASSWORD_FILE: "/run/secrets/transmission_rpc_password"
    secrets:
      - pia_username
      - pia_password
      - transmission_rpc_username
      - transmission_rpc_password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission-rtr.entrypoints=websecure"
      - "traefik.http.routers.transmission-rtr.rule=Host(`transmission.$DOMAINNAME`)"
      - "traefik.http.routers.transmission-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.transmission-rtr.service=transmission-svc"
      - "traefik.http.services.transmission-svc.loadbalancer.server.port=9091"

# # Gluetun - VPN Client for Docker Containers and More
# # Gluetun only for use by torrent clients + on demand lan devices.
#   gluetun:
#     image: qmcgaw/gluetun
#     container_name: gluetun
#     security_opt:
#       - no-new-privileges:true
#     restart: unless-stopped
#     profiles: ["infra", "downloads", "all"]
#     networks:
#       - t3_proxy
#     cap_add:
#       - NET_ADMIN
#     devices:
#       - /dev/net/tun
#     dns:
#       - 1.1.1.1
#       - 1.0.0.1
#     ports:
#       - "8081:8080" # Exposing qBittorrent through Docker Host LAN IP
#     # #   - 8888:8888/tcp # HTTP proxy
#     # #   - 8388:8388/tcp # Shadowsocks
#     # #   - 8388:8388/udp # Shadowsocks
#     volumes:
#       - $DOCKERDIR/gluetun:/gluetun
#       - $DOCKERDIR/gluetun/portforward:/tmp/gluetun/
#     environment:
#       TZ: $TZ
#       # Wireguard
#       # VPN_SERVICE_PROVIDER: surfshark
#       # VPN_TYPE: wireguard
#       # WIREGUARD_PRIVATE_KEY: $SURFSHARK_WG_PRIVATE_KEY
#       # WIREGUARD_ADDRESSES: 10.14.0.2/16
#       # SERVER_COUNTRIES: Netherlands
#       # OpenVPN
#       VPN_SERVICE_PROVIDER: private internet access
#       VPN_TYPE: openvpn
#       VPN_PORT_FORWARDING: on
#       #PRIVATE_INTERNET_ACCESS_VPN_PRIVATE_INTERNET_ACCESS_VPN_PORT_FORWARDING_STATUS_FILE: /gluetun/forwarded_port
#       VPN_PORT_FORWARDING_STATUS_FILE: /tmp/gluetun/forwarded_port
#       VPN_PORT_FORWARDING_USERNAME_SECRETFILE: /run/secrets/openvpn_user
#       VPN_PORT_FORWARDING_PASSWORD_SECRETFILE: /run/secrets/openvpn_password
#       OPENVPN_CONFIG: Argentina
# #      DNS_SERVER: 1.0.0.1, 1.1.1.1
#       OPENVPN_OPTS: --inactive 3600 --ping 10 --ping-exit 60
#     secrets:
#       - source: pia_username
#         target: /run/secrets/openvpn_user
#       - source: pia_password
#         target: /run/secrets/openvpn_password
#     labels:
#       - "traefik.enable=true"
#       # HTTP Routers
#       - "traefik.http.routers.gluetun-qbittorrent-rtr.entrypoints=websecure"
#       - "traefik.http.routers.gluetun-qbittorrent-rtr.rule=Host(`qbit.$DOMAINNAME`)" # qBittorrent
#       # Middlewares
#       - "traefik.http.routers.gluetun-qbittorrent-rtr.middlewares=chain-oauth@file" # qBittorrent
#       # HTTP Services
#       - "traefik.http.routers.gluetun-qbittorrent-rtr.service=gluetun-svc" # qBittorrent
#       - "traefik.http.services.gluetun-svc.loadbalancer.server.port=8080" # qBittorrent

#   # qBittorrent - Torrent downloader
#   # Needs trailing / if using PathPrefixStrip
#   qbittorrent:
#     image: linuxserver/qbittorrent:latest
#     container_name: qbittorrent
#     security_opt:
#       - no-new-privileges:true
#     restart: unless-stopped
#     profiles: ["media", "downloads", "all"]
#     network_mode: "service:gluetun"
#     # ports:
#     #   - "8081:8080" # Explosed via gluetun. 8081 because crowdsec is using port 8080
#     volumes:
#       - $DOCKERDIR/qbittorrent:/config
#       - $DOCKERDIR/gluetun/portforward:/tmp/gluetun/
#       - $DOWNLOAD_DIR:/downloads # Ensure that downloads folder is set to /data/downloads in qBittorrent
#     environment:
#       TZ: $TZ
#       PUID: $PUID
#       PGID: $PGID
#       UMASK_SET: 002
#       TORRENTING_PORT_FILE: /tmp/gluetun/forwarded_port
#     healthcheck: # https://github.com/qdm12/gluetun/issues/641#issuecomment-933856220
#       test: "curl -sf https://example.com  || exit 1"
#       interval: 1m
#       timeout: 10s
#       retries: 1
#     labels: # Traefik labels added via glueten
#       - "deunhealth.restart.on.unhealthy=true"

# SABnzbd - Binary newsgrabber (NZB downloader)
  sabnzbd:
    <<: *common-keys-apps 
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    profiles: ["media", "downloads", "all"]
    ports:
      - "$SABNZBD_PORT:8080"
    volumes:
      - $DOCKERDIR/sabnzbd:/config
      - $DOWNLOAD_DIR:/downloads
      - $DOWNLOAD_DIR/incomplete:/incomplete
    environment:
      <<: *default-tz-puid-pgid
      UMASK_SET: 002
    labels:
      - "traefik.enable=true"
      # HTTP Routers Auth Bypass
      - "traefik.http.routers.sabnzbd-rtr-bypass.entrypoints=websecure"
      - "traefik.http.routers.sabnzbd-rtr-bypass.rule=Host(`sabnzbd.$DOMAINNAME`) && (Header(`X-Api-Key`, `$SABNZBD_API`) || Query(`apikey`, `$SABNZBD_API`))"
      - "traefik.http.routers.sabnzbd-rtr-bypass.priority=100"
      # HTTP Routers Auth
      - "traefik.http.routers.sabnzbd-rtr.entrypoints=websecure"
      - "traefik.http.routers.sabnzbd-rtr.rule=Host(`sabnzbd.$DOMAINNAME`)"
      - "traefik.http.routers.sabnzbd-rtr.priority=99"
      # Middlewares
      - "traefik.http.routers.sabnzbd-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.sabnzbd-rtr.middlewares=chain-oauth@file"
      # HTTP Services
      - "traefik.http.routers.sabnzbd-rtr.service=sabnzbd-svc"
      - "traefik.http.routers.sabnzbd-rtr-bypass.service=sabnzbd-svc"
      - "traefik.http.services.sabnzbd-svc.loadbalancer.server.port=8080"

############################# INDEXERS
# PROWLARR - NZB/TOR Proxy Search
  prowlarr:
    <<: *common-keys-apps
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    profiles: ["media", "all"]
    environment:
      <<: *default-tz-puid-pgid
    volumes:
      - $DOCKERDIR/prowlarr/data:/config
    ports:
      - $PROWLARR_PORT:9696
    labels:
      - "traefik.enable=true"
      # HTTP Routers Auth Bypass
      - "traefik.http.routers.prowlarr-rtr-bypass.entrypoints=websecure"
      - "traefik.http.routers.prowlarr-rtr-bypass.rule=Host(`prowlarr.$DOMAINNAME`) && (Header(`X-Api-Key`, `$PROWLARR_API`) || Query(`apikey`, `$PROWLARR_API`))"
      - "traefik.http.routers.prowlarr-rtr-bypass.priority=100"
      # HTTP Routers Auth
      - "traefik.http.routers.prowlarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr-rtr.rule=Host(`prowlarr.$DOMAINNAME`)"
      - "traefik.http.routers.prowlarr-rtr.priority=99"
      # Middlewares
      - "traefik.http.routers.prowlarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.prowlarr-rtr.middlewares=chain-oauth@file"
      # HTTP Services
      - "traefik.http.routers.prowlarr-rtr.service=prowlarr-svc"
      - "traefik.http.routers.prowlarr-rtr-bypass.service=prowlarr-svc"
      - "traefik.http.services.prowlarr-svc.loadbalancer.server.port=9696"

  flaresolverr:
    <<: *common-keys-apps
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    profiles: ["media", "all"]
    environment:
      <<: *default-tz-puid-pgid
      #LOG_LEVEL: ${LOG_LEVEL:-info}
      #LOG_HTML: ${LOG_HTML:-false}
      CAPTCHA_SOLVER: ${CAPTCHA_SOLVER:-none}
#    ports:
#      - "${PORT:-8191}:8191"

############################# PVRS

# Lidarr - Music Management
  lidarr:
    <<: *common-keys-apps
    image: linuxserver/lidarr
    container_name: lidarr
    profiles: ["media", "all"]
    ports:
      - "$LIDARR_PORT:8686"
    volumes:
      - $DOCKERDIR/lidarr:/config
      - $DOWNLOAD_DIR:/downloads
      - $USERDIR/media/music:/music
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-puid-pgid
    labels:
      - "traefik.enable=true"
      # HTTP Routers Auth Bypass
      - "traefik.http.routers.lidarr-rtr-bypass.entrypoints=websecure"
      - "traefik.http.routers.lidarr-rtr-bypass.rule=Host(`lidarr.$DOMAINNAME`) && (Header(`X-Api-Key`, `$LIDARR_API`) || Query(`apikey`, `$LIDARR_API`))"
      - "traefik.http.routers.lidarr-rtr-bypass.priority=100"
      # HTTP Routers Auth
      - "traefik.http.routers.lidarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.lidarr-rtr.rule=Host(`lidarr.$DOMAINNAME`)"
      - "traefik.http.routers.lidarr-rtr.priority=99"
      # Middlewares
      - "traefik.http.routers.lidarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.lidarr-rtr.middlewares=chain-oauth@file"
      # HTTP Services
      - "traefik.http.routers.lidarr-rtr.service=lidarr-svc"
      - "traefik.http.routers.lidarr-rtr-bypass.service=lidarr-svc"
      - "traefik.http.services.lidarr-svc.loadbalancer.server.port=8686"

# Radarr - Movie management
  radarr:
    <<: *common-keys-apps
    image: linuxserver/radarr:nightly
    container_name: radarr
    profiles: ["media", "all"]
    ports:
      - "$RADARR_PORT:7878"
    volumes:
      - $DOCKERDIR/radarr:/config
      - $DOWNLOAD_DIR:/downloads
      - $USERDIR/media/movies:/movies
      - $USERDIR/media/kidsmovies:/kidsmovies
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-puid-pgid
    labels:
      - "traefik.enable=true"
      # HTTP Routers Auth Bypass
      - "traefik.http.routers.radarr-rtr-bypass.entrypoints=websecure"
      - "traefik.http.routers.radarr-rtr-bypass.rule=Host(`radarr.$DOMAINNAME`) && (Header(`X-Api-Key`, `$RADARR_API`) || Query(`apikey`, `$RADARR_API`))"
      - "traefik.http.routers.radarr-rtr-bypass.priority=100"
      # HTTP Routers Auth
      - "traefik.http.routers.radarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.radarr-rtr.rule=Host(`radarr.$DOMAINNAME`)"
      - "traefik.http.routers.radarr-rtr.priority=99"
      # Middlewares
      - "traefik.http.routers.radarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.radarr-rtr.middlewares=chain-oauth@file"
      # HTTP Services
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      - "traefik.http.routers.radarr-rtr-bypass.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"

# Sonarr - TV Shows management
  sonarr:
    <<: *common-keys-apps
    image: linuxserver/sonarr:develop
    container_name: sonarr
    profiles: ["media", "all"]
    ports:
      - "$SONARR_PORT:8989"
    volumes:
      - $DOCKERDIR/sonarr:/config
      - $DOWNLOAD_DIR:/downloads
      - $USERDIR/media/tvshows:/tv
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-puid-pgid
    labels:
      - "traefik.enable=true"
      # HTTP Routers Auth Bypass
      - "traefik.http.routers.sonarr-rtr-bypass.entrypoints=websecure"
      - "traefik.http.routers.sonarr-rtr-bypass.rule=Host(`sonarr.$DOMAINNAME`) && (Header(`X-Api-Key`, `$SONARR_API`) || Query(`apikey`, `$SONARR_API`))"
      - "traefik.http.routers.sonarr-rtr-bypass.priority=100"
      # HTTP Routers Auth
      - "traefik.http.routers.sonarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.$DOMAINNAME`)"
      - "traefik.http.routers.sonarr-rtr.priority=99"
      # Middlewares
      - "traefik.http.routers.sonarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-oauth@file"
      # HTTP Services
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.routers.sonarr-rtr-bypass.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"

############################# MEDIA
#Plex Media Server
  plex:
    <<: *common-keys-apps
    image: linuxserver/plex
    container_name: plex
    profiles: ["media", "all"]
    # runtime: nvidia
    environment:
      <<: *default-tz-puid-pgid
      PLEX_CLAIM_FILE: /run/secrets/plex_claim
      ADVERTISE_IP: http://$SERVER_IP:$PLEX_PORT/,https://plex.$DOMAINNAME/
      ALLOWED_NETWORKS: $IPWHITELIST
      VERSION: docker
      # NVIDIA_VISIBLE_DEVICES: all
      # NVIDIA_DRIVER_CAPABILITIES: compute,video,utility
    devices:
      - /dev/dri:/dev/dri
    secrets:
      - plex_claim
    hostname: plex
    networks:
      t3_proxy:
    ports:
      - $PLEX_PORT:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 5351:5351/udp
      - 5353:5353/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    volumes:
      - $DOCKERDIR/plex/preroll:/preroll
      - $USERDIR/media:/media
      - $DOCKERDIR/plex/DB:/config
      - /dev/shm:/transcode
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex-rtr.entrypoints=websecure"
      - "traefik.http.routers.plex-rtr.rule=Host(`plex.$DOMAINNAME`)"
      - "traefik.http.routers.plex-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.plex-rtr.service=plex-svc"
      - "traefik.http.services.plex-svc.loadbalancer.server.port=32400"

#Plex Meta Manager - Automatic Metadata Manager for Plex
  plexmm:
    <<: *common-keys-apps
    image: linuxserver/kometa
    container_name: plexmm
    profiles: ["media", "all"]
    depends_on:
      - plex
    environment:
      <<: *default-tz-puid-pgid
      KOMETA_CONFIG: /config/config.yml #optional
      KOMETA_TIMES: 05:00 #optional
      # KOMETA_RUN: "True" #optional
      KOMETA_TEST: "False" #optional
      KOMETA_NO_MISSING: "False" #optional
      KOMETA_PLEXTOKEN: $PLEX_TOKEN
      KOMETA_TRAKTCLIENTID: $TRAKT_CLIENTID
      KOMETA_TRAKTCLIENTSECRET: $TRAKT_CLIENTSECRET
      KOMETA_TRAKTPIN: $TRAKT_PIN
      KOMETA_GITHUBTOKEN: $GITHUB_TOKEN
      KOMETA_RADARRAPI: $RADARR_API
      KOMETA_SONARRAPI: $SONARR_API
      KOMETA_MDBLISTAPI: $MDBLIST_API
      KOMETA_OMDBAPI: $OMDB_API
      KOMETA_TMDBAPI: $TMDB_API
      KOMETA_TAUTULLIAPI: $TAUTULLI_API
      KOMETA_SERVERIP: $SERVER_IP
      KOMETA_PLEXPORT: $PLEX_PORT
      KOMETA_NOTIFIARRAPI: $NOTIFIARR_API
    volumes:
      - $DOCKERDIR/plex-meta-manager/config:/config:rw
    secrets:
      - plex_token
      - trakt_clientid
      - trakt_clientsecret
      - trakt_pin
      - github_token
      - sonarr_api
      - radarr_api
      - mdblist_api
      - omdb_api
      - tmdb_api
      - tautulli_api

#Plex Image Cleanup
  plexic:
    <<: *common-keys-apps
    image: meisnate12/plex-image-cleanup
    container_name: plexic
    profiles: ["media", "all"]
    depends_on:
      - plex
    environment:
      <<: *default-tz-puid-pgid
      PLEX_PATH: /plex
      MODE: remove
      SCHEDULE: "07:00|weekly(sunday)"
      PLEX_URL: http://$SERVER_IP:$PLEX_PORT
      PLEX_TOKEN: /run/secrets/plex_token
      #DISCORD=https://discord.com/api/webhooks/###################/####################################################################
      TIMEOUT: 600
      SLEEP: 60
      IGNORE_RUNNING: True
      LOCAL_DB: False
      USE_EXISTING: False
      PHOTO_TRANSCODER: False
      EMPTY_TRASH: True
      CLEAN_BUNDLES: True
      OPTIMIZE_DB: True
      TRACE: False
      LOG_REQUESTS: True
    secrets:
      - plex_token
    volumes:
      - $DOCKERDIR/plex-image-cleanup/config:/config
      - $DOCKERDIR/plex/DB/Library/Application Support/Plex Media Server:/plex

# Ombi - Media Requests
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    networks:
      - default
      - t3_proxy
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["media", "all"]
    ports:
      - "$OMBI_PORT:3579"
    volumes:
      - $DOCKERDIR/ombi:/config
    environment:
      <<: *default-tz-puid-pgid
      BASE_URL: /ombi #optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ombi-rtr.entrypoints=websecure"
      - "traefik.http.routers.ombi-rtr.priority=99"
      - "traefik.http.routers.ombi-rtr.rule=Host(`ombi.$DOMAINNAME`)"
      - "traefik.http.routers.ombi-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.ombi-rtr.service=ombi-svc"
      - "traefik.http.services.ombi-svc.loadbalancer.server.port=3579"
      ## API Oauth Bypass
      - "traefik.http.routers.ombi-api-rtr.entrypoints=websecure"
      - "traefik.http.routers.ombi-api-rtr.rule=Host(`ombi.$DOMAINNAME`) && PathPrefix(`/api/`)"
      - "traefik.http.routers.ombi-api-rtr.priority=100"
      - "traefik.http.routers.ombi-api-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.ombi-api-rtr.service=ombi-svc"

# Tautulli - Plex statistics and monitoring
  tautulli:
    <<: *common-keys-apps
    image: linuxserver/tautulli
    container_name: tautulli
    profiles: ["media", "all"]
    ports:
      - "$TAUTULLI_PORT:8181"
    volumes:
      - $DOCKERDIR/tautulli/config:/config
      - $DOCKERDIR/tautulli/logs:/logs:ro
    environment:
      <<: *default-tz-puid-pgid
    depends_on:
      - plex
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli-rtr.entrypoints=websecure"
      - "traefik.http.routers.tautulli-rtr.priority=99"
      - "traefik.http.routers.tautulli-rtr.rule=Host(`tautulli.$DOMAINNAME`)"
      - "traefik.http.routers.tautulli-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.tautulli-rtr.service=tautulli-svc"
      - "traefik.http.services.tautulli-svc.loadbalancer.server.port=8181"
      ## API Oauth Bypass
      - "traefik.http.routers.tautulli-api-rtr.entrypoints=websecure"
      - "traefik.http.routers.tautulli-api-rtr.rule=Host(`tautulli.${DOMAINNAME}`) && (Header(`X-Api-Key`, `${TAUTULLI_DEVICE_KEY1}`) || Query(`apikey`, `${TAUTULLI_DEVICE_KEY1}`))"
      - "traefik.http.routers.tautulli-api2-rtr.rule=Host(`tautulli.${DOMAINNAME}`) && (Header(`X-Api-Key`, `${TAUTULLI_DEVICE_KEY2}`) || Query(`apikey`, `${TAUTULLI_DEVICE_KEY2}`))"
      - "traefik.http.routers.tautulli-api3-rtr.rule=Host(`tautulli.${DOMAINNAME}`) && (Header(`X-Api-Key`, `${TAUTULLI_API}`) || Query(`apikey`, `${TAUTULLI_API}`))"
      - "traefik.http.routers.tautulli-api-rtr.priority=100"
      - "traefik.http.routers.tautulli-api2-rtr.priority=101"
      - "traefik.http.routers.tautulli-api3-rtr.priority=102"
      - "traefik.http.routers.tautulli-api-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.tautulli-api-rtr.service=tautulli-svc"

############################# MEDIA FILE MANAGEMENT

# Bazarr - Subtitle Management
  bazarr:
    <<: *common-keys-apps
    image: linuxserver/bazarr
    container_name: bazarr
    profiles: ["media", "all"]
    ports:
      - "$BAZARR_PORT:6767"
    volumes:
      - $DOCKERDIR/bazarr:/config
      - $USERDIR/media/movies:/movies
      - $USERDIR/media/tvshows:/tv
      - $USERDIR/media/kidsmovies:/kidsmovies
    environment:
      <<: *default-tz-puid-pgid
    labels:
      - "traefik.enable=true"
      # HTTP Routers Auth Bypass
      - "traefik.http.routers.bazarr-rtr-bypass.entrypoints=websecure"
      - "traefik.http.routers.bazarr-rtr-bypass.rule=Host(`bazarr.$DOMAINNAME`) && (Header(`X-Api-Key`, `$BAZARR_API`) || Query(`apikey`, `$BAZARR_API`))"
      - "traefik.http.routers.bazarr-rtr-bypass.priority=100"
      # HTTP Routers Auth
      - "traefik.http.routers.bazarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.$DOMAINNAME`)"
      - "traefik.http.routers.bazarr-rtr.priority=99"
      # Middlewares
      - "traefik.http.routers.bazarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.bazarr-rtr.middlewares=chain-oauth@file"
      # HTTP Services
      - "traefik.http.routers.bazarr-rtr.service=bazarr-svc"
      - "traefik.http.routers.bazarr-rtr-bypass.service=bazarr-svc"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.port=6767"

############################# UTILITIES
# Firefox - Web Broswer
  firefox:
    <<: *common-keys-apps
    image: jlesage/firefox:latest
    container_name: firefox
    security_opt:
      - seccomp:unconfined # October 15, 2020 https://github.com/jlesage/docker-firefox/blob/master/README.md#allowing-the-membarrier-system-call
    profiles: ["ff"]
    # ports:
    #   - "$FIREFOX_PORT:5800"
    volumes:
      - $DOCKERDIR/firefox:/config
      - $DOWNLOAD_DIR:/data/downloads
      - /dev/shm:/dev/shm
    environment:
      <<: *default-tz-puid-pgid
      UMASK: 002
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1920
      DISPLAY_HEIGHT: 1080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.firefox-rtr.entrypoints=websecure"
      - "traefik.http.routers.firefox-rtr.rule=Host(`firefox.$DOMAINNAME`)"
      - "traefik.http.routers.firefox-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.firefox-rtr.service=firefox-svc"
      - "traefik.http.services.firefox-svc.loadbalancer.server.port=5800"

# Glances - System Information
  glances:
    <<: *common-keys-apps
    image: nicolargo/glances
    container_name: glances
    profiles: ["infra", "all"]
    privileged: true
    ports:
      - "$GLANCES_PORT:61208"
    pid: host
    volumes:
      - $DOCKERDIR/glances/glances.conf:/glances/conf/glances.conf # Use this if you want to add a glances.conf file
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      <<: *default-tz-puid-pgid
#      GLANCES_OPT: "-C /glances/conf/glances.conf --quiet --export influxdb"
      GLANCES_OPT: "-w --password"
    secrets:
      - source: glances_password
        target: /root/.config/glances/glances.pwd
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.glances-rtr.entrypoints=websecure"
      - "traefik.http.routers.glances-rtr.rule=Host(`glances.$DOMAINNAME`)"
      - "traefik.http.routers.glances-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.glances-rtr.service=glances-svc"
      - "traefik.http.services.glances-svc.loadbalancer.server.port=61208"

# Dozzle - Real-time Docker Log Viewer
  dozzle:
    <<: *common-keys-apps
    image: amir20/dozzle
    container_name: dozzle
    profiles: ["infra", "all"]
    ports:
      - "$DOZZLE_PORT:8080"
    environment:
      <<: *default-tz-puid-pgid
      DOZZLE_LEVEL: info
#      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
      DOZZLE_NO_ANALYTICS: 1
#      DOZZLE_FILTER: "label=log_me" # limits logs displayed to containers with this label
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dozzle-rtr.entrypoints=websecure"
      - "traefik.http.routers.dozzle-rtr.rule=Host(`dozzle.$DOMAINNAME`)"
      - "traefik.http.routers.dozzle-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.dozzle-rtr.service=dozzle-svc"
      - "traefik.http.services.dozzle-svc.loadbalancer.server.port=8080"

# WatchTower - Automatic Docker Container Updates
  watchtower:
    <<: *common-keys-apps
    image: containrrr/watchtower
    container_name: watchtower
    profiles: ["infra", "all"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy and comment this line for improved security.
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_REMOVE_VOLUMES: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "false"
      WATCHTOWER_SCHEDULE: "0 30 12 * * *" # Everyday at 12:30
      # DOCKER_HOST: tcp://socket-proxy:2375 # Use this if you have Socket Proxy enabled.
      DOCKER_API_VERSION: "1.46"

# Docker-GC - Automatic Docker Garbage Collection 
# Create docker-gc-exclude file
  dockergc:
    <<: *common-keys-apps
    image: clockworksoul/docker-gc-cron #reddthebamf/docker-gc-cron
    container_name: docker-gc
    profiles: ["infra", "all"]
#    network_mode: none
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKERDIR/docker-gc/docker-gc-exclude:/etc/docker-gc-exclude
    environment:
      <<: *default-tz-puid-pgid
      CRON: 0 0 0 * * ?
      FORCE_IMAGE_REMOVAL: 1
      FORCE_CONTAINER_REMOVAL: 0
      GRACE_PERIOD_SECONDS: 604800
      DRY_RUN: 0
      CLEAN_UP_VOLUMES: 1

# Traefik Certs Dumper - Extract LetsEncrypt Certificates - Traefik2 Compatible
  certdumper:
    <<: *common-keys-apps
    image: humenius/traefik-certs-dumper #kereis/traefik-certs-dumper:multi-arch-builds-alpine
    container_name: traefik_certdumper
    profiles: ["infra", "all"]
#    command: --restart-containers container1,container2,container3
    volumes:
      - $DOCKERDIR/traefik3/acme:/traefik:ro
      - $DOCKERDIR/shared/certs:/output:rw
#    - /var/run/docker.sock:/var/run/docker.sock:ro # only needed if restarting containers
    environment:
      <<: *default-tz-puid-pgid
      DOMAIN: $DOMAINNAME 

# VSCode - VSCode Editing
  vscode:
    <<: *common-keys-apps
    image: linuxserver/code-server:latest
    container_name: vscode
    profiles: ["infra", "all"]
    ports:
      - "8443:8443"
    volumes:
      - $DOCKERDIR:/data/docker
      - $USERDIR:/data/server
#      - $DATADIR:/data/data
      - $DOCKERDIR/vscode:/config
    environment:
      <<: *default-tz-puid-pgid
      # DOCKER_HOST: tcp://socket-proxy:2375
      # PASSWORD: $VSCODE_PASSWORD
      # HASHED_PASSWORD: #optional
      # SUDO_PASSWORD: password #optional
      # SUDO_PASSWORD_HASH: #optional
      # PROXY_DOMAIN: code-server.my.domain #optional
#      DEFAULT_WORKSPACE: /config/data/User/Workspaces/AZ.code-workspace #optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vscode-rtr.entrypoints=websecure"
      - "traefik.http.routers.vscode-rtr.rule=Host(`code.$DOMAINNAME`)"
      - "traefik.http.routers.vscode-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.vscode-rtr.service=vscode-svc"
      - "traefik.http.services.vscode-svc.loadbalancer.server.port=8443"

# WhoAmI - For Testing and Troubleshooting
  whoami:
    image: traefik/whoami
    container_name: whoami
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["infra", "all"]
    networks:
      - t3_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami-rtr.entrypoints=websecure"
      - "traefik.http.routers.whoami-rtr.rule=Host(`whoami.$DOMAINNAME`)"
      - "traefik.http.routers.whoami-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.whoami-rtr.service=whoami-svc"
      - "traefik.http.services.whoami-svc.loadbalancer.server.port=80"

# #PiHole DNS Blocking
#   pihole:
#     <<: *common-keys-core
#     container_name: pihole
#     image: pihole/pihole
#     profiles: ["infra", "all"]
#     cap_add:
#       - NET_ADMIN
#     hostname: pihole
#     networks:
#       t3_proxy:
#         ipv4_address: $PIHOLE_IP
#     dns:
#       - 127.0.0.1
#       - 1.1.1.1
#     ports:
# #      - "$PIHOLE_PORT1:80"
# #      - "$PIHOLE_PORT2:443"
#       - "$SERVER_IP:53:53/tcp"
#       - "$SERVER_IP:53:53/udp"
# #      - "67:67/udp"
#     volumes:
#       - $DOCKERDIR/pihole/pihole:/etc/pihole
#       - $DOCKERDIR/pihole/dnsmasq.d:/etc/dnsmasq.d
#       - $DOCKERDIR/pihole/logs/pihole.log:/var/log/pihole.log
#     environment:
#       <<: *default-tz-puid-pgid
#       FTLCONF_REPLY_ADDR4: $SERVER_IP
#       VIRTUAL_HOST: pihole.$DOMAINNAME
#       VIRTUAL_PORT: 80
#       WEBPASSWORD: $PIHOLE_PASSWORD
#       PIHOLE_DNS_: $ROUTER_IP
#       DNS_BOGUS_PRIV: "true"
#       REV_SERVER: "true"
#       REV_SERVER_DOMAIN: $LOCALDOMAINNAME
#       REV_SERVER_TARGET: $ROUTER_IP
#       REV_SERVER_CIDR: $LOCAL_NETWORK
#       ADMIN_EMAIL:  $MY_EMAIL
#       WEBTHEME: "default-dark"
#       RATE_LIMIT: 5000/60
#       EDNS-PACKET-MAX: 1232
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.pihole-rtr.entrypoints=websecure"
#       - "traefik.http.routers.pihole-rtr.rule=Host(`pihole.$DOMAINNAME`)"
#       - "traefik.http.routers.pihole-rtr.middlewares=chain-oauth@file"
#       - "traefik.http.routers.pihole-rtr.service=pihole-svc"
#       - "traefik.http.services.pihole-svc.loadbalancer.server.port=80"

#WireGuard VPN Server
  wireguard:
    <<: *common-keys-core
    image: linuxserver/wireguard
    container_name: wireguard
    profiles: ["infra", "remote"]
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      <<: *default-tz-puid-pgid
      SERVERURL: vpn.$DOMAINNAME
      SERVERPORT: 51820
      PEERS: $WIREGUARD_PEER1, $WIREGUARD_PEER2 # number of peers/names
      PEERDNS: auto #optional
      ALLOWEDIPS: $WIREGUARD_ALLOWEDIPS
    volumes:
      - $DOCKERDIR/wireguard/config:/config
      - $DOCKERDIR/wireguard/modules:/lib/modules
    ports:
      - $WIREGUARD_VPN_PORT:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
